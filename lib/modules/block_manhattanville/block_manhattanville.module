<?php
/**
 * @file
 * Module file for block_manhattanville.
 */

/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function block_manhattanville_block_info() {

  $blocks['manhattanville_search_widget'] = array(
    'info' => t('Columbia University Search form widget'),
  );
  
  $blocks['mville_clean_construction'] = array(
    'info' => t('Clean construction'),
  );
  
  $blocks['mville_contact_form'] = array(
    'info' => t('Construction updates sing up form'),
  );  

  $blocks['mville_social_media_links'] = array(
    'info' => t('Social Media Links'),
  );

  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function block_manhattanville_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'manhattanville_search_widget':
      // The subject is displayed at the top of the block. Note that it
      // should be passed through t() for translation. The title configured
      // for the block using Drupal UI supercedes this one.
      $block['subject'] = t('Columbia University Search form widget');
      // The content of the block is typically generated by calling a custom
      // function.
      $block['content'] = block_manhattanville_contents($delta);
      break;

    case 'mville_clean_construction':
	  
	  $block['subject'] = t('Clean construction');
      $block['content'] = block_manhattanville_contents($delta);
      
      break;
	  
    case 'mville_contact_form':
	  
	  $block['subject'] = t('Sing up to receive our construction updates');
      $block['content'] = block_manhattanville_contents($delta);
      
      break;
	  
    case 'mville_social_media_links':
      $block['content'] = block_manhattanville_contents($delta);
      break;
	  

  }
  return $block;
}

/**
 * Implements hook_block_configure().
 *
 * This hook declares configuration options for blocks provided by this module.
 */
function block_manhattanville_block_configure($delta = '') {

  $form = array();
  
  if ($delta == 'mville_clean_construction') {
    // All we need to provide is the specific configuration options for our
    // block. Drupal will take care of the standard block configuration options
    // (block title, page visibility, etc.) and the save button.
    $form['mville_clean_construction_string'] = array(
      '#type' => 'textarea',
      '#title' => t('Block contents'),
      '#size' => 60,
      '#description' => t('Add the clean construction content here.'),
      '#default_value' => variable_get('mville_clean_construction_string',  t('Some example content.')),
    );
  }
  return $form;
}

/**
 * Implements hook_block_save().
 *
 * This hook declares how the configured options for a block
 * provided by this module are saved.
 */
function block_manhattanville_block_save($delta = '', $edit = array()) {
  // We need to save settings from the configuration form.
  // We need to check $delta to make sure we are saving the right block.
  if ($delta == 'mville_clean_construction') {
    // Have Drupal save the string to the database.
    variable_set('mville_clean_construction_string', $edit['mville_clean_construction_string']);
  }
  return;
}

function block_manhattanville_add_contacts() {
  	
  global $user;
	
  $node = (object) array(
    'uid' => $user->uid,
    'name' => (isset($user->name) ? $user->name : ''),
    'type' => 'contact',
    'language' => LANGUAGE_NONE,
  );
    
  $form_state['build_info']['args'] = array($node);
    
  form_load_include($form_state, 'inc', 'node', 'node.pages');
    
  $contact_form = drupal_build_form('contact' . '_node_form', $form_state);
	
  return render($contact_form);
}

/**
 * A module-defined block content function.
 */
function block_manhattanville_contents($which_block) {
  switch ($which_block) {
    case 'manhattanville_search_widget':
     $block_form = '<form id="cu-search" action="http://search.columbia.edu/search" method="get">
                      <div class="wrapper">
                        <div class="wrapper-inner">
                          <input type="hidden" name="proxystylesheet" value="columbia2">
                          <input type="hidden" name="client" value="columbia">
                          <input type="hidden" name="site" value="Columbia">
                          <input type="hidden" name="output" value="xml_no_dtd">
                          <input id="cu-search-box" placeholder="' . t('Search for people, departments & websites') . '" type="text" maxlength="2033" value="" name="q" autocomplete="off" role="textbox" aria-autocomplete="list" aria-haspopup="true">
                          <button id="cu-search-submit" type="submit">' . t('Submit') . '</button>
                        </div>
                      </div>
                    </form>';

      return array('#markup' => $block_form);
      break;

    case 'mville_clean_construction':
      return array('#markup' => variable_get('mville_clean_construction_string',  t('A default value. This block was created at %time', array('%time' => date('c')))));

      break;
      
    case 'mville_contact_form' :
      return array('#markup' => block_manhattanville_add_contacts());
      break;

    case 'mville_social_media_links':
      $links = '<ul id="service-links">
      <li class="facebook"><a href="http://www.facebook.com/columbia">Facebook</a></li>
      <li class="twitter"><a href="http://www.twitter.com/columbia">Twitter</a></li>
      <li class="gplus"><a href="https://plus.google.com/109017232134596716836">Google+</a></li>
      <li class="itunes"><a href="http://itunes.columbia.edu/m/">iTunes</a></li>
      <li class="rss"><a href="http://news.columbia.edu/rss-how-to">RSS</a></li>
      <li class="youtube"><a href="http://www.youtube.com/ColumbiaUniversity">YouTube</a></li>
    </ul>';

      return array('#markup' => $links);
      break;
  }
}