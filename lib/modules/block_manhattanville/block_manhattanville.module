<?php
/**
 * @file
 * Module file for block_manhattanville.
 */

/**
 * Implements hook_block_info().
 *
 * This hook declares what blocks are provided by the module.
 */
function block_manhattanville_block_info() {
  // This hook returns an array, each component of which is an array of block
  // information. The array keys are the 'delta' values used in other block
  // hooks.

  // The required block information is a block description, which is shown
  // to the site administrator in the list of possible blocks. You can also
  // provide initial settings for block weight, status, etc.

  // Many options are defined in hook_block_info():
  $blocks['manhattanville_search_widget'] = array(
    // info: The name of the block.
    'info' => t('Columbia University Search form widget'),
    // Block caching options (per role, per user, etc.)
    'cache' => DRUPAL_CACHE_PER_ROLE, // default
  );

  $blocks['mville_social_media_links'] = array(
    'info' => t('Social Media Links'),
  );


  return $blocks;
}

/**
 * Implements hook_block_view().
 *
 * This hook generates the contents of the blocks themselves.
 */
function block_manhattanville_block_view($delta = '') {
  //The $delta parameter tells us which block is being requested.
  switch ($delta) {
    case 'manhattanville_search_widget':
      // The subject is displayed at the top of the block. Note that it
      // should be passed through t() for translation. The title configured
      // for the block using Drupal UI supercedes this one.
      $block['subject'] = t('Columbia University Search form widget');
      // The content of the block is typically generated by calling a custom
      // function.
      $block['content'] = block_manhattanville_contents($delta);
      break;

    case 'mville_social_media_links':
      $block['content'] = block_manhattanville_contents($delta);
      break;

  }
  return $block;
}

/**
 * A module-defined block content function.
 */
function block_manhattanville_contents($which_block) {
  switch ($which_block) {
    case 'manhattanville_search_widget':
     $block_form = '<form id="cu-search" action="http://search.columbia.edu/search" method="get">
                      <div class="wrapper">
                        <div class="wrapper-inner">
                          <input type="hidden" name="proxystylesheet" value="columbia2">
                          <input type="hidden" name="client" value="columbia">
                          <input type="hidden" name="site" value="Columbia">
                          <input type="hidden" name="output" value="xml_no_dtd">
                          <input id="cu-search-box" placeholder="' . t('Search for people, departments & websites') . '" type="text" maxlength="2033" value="" name="q" autocomplete="off" role="textbox" aria-autocomplete="list" aria-haspopup="true">
                          <button id="cu-search-submit" type="submit">' . t('Submit') . '</button>
                        </div>
                      </div>
                    </form>';

      return array('#markup' => $block_form);
      break;

    case 'mville_social_media_links':
      $links = '<ul id="service-links">
      <li class="facebook"><a href="http://www.facebook.com/columbia">Facebook</a></li>
      <li class="twitter"><a href="http://www.twitter.com/columbia">Twitter</a></li>
      <li class="gplus"><a href="https://plus.google.com/109017232134596716836">Google+</a></li>
      <li class="itunes"><a href="http://itunes.columbia.edu/m/">iTunes</a></li>
      <li class="rss"><a href="http://news.columbia.edu/rss-how-to">RSS</a></li>
      <li class="youtube"><a href="http://www.youtube.com/ColumbiaUniversity">YouTube</a></li>
    </ul>';

      return array('#markup' => $links);
      break;
  }
}